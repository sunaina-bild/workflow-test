name: Deploy Frontend to Netlify

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Where to deploy?"
        required: true
        default: "demo2"
        type: choice
        options:
          - prod
          - gov
          - demo2
          - custom
      custom_netlify_site_id:
        description: "Your Netlify Site ID (for custom env)"
        required: false
      custom_netlify_token:
        description: "Your Netlify Auth Token (for custom env)"
        required: false

  push:
    branches:
      - setting-pipeline-for-fe

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest      

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.9.0

      # - name: Setup Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '18'
      #     cache: 'pnpm'
      #     cache-dependency-path: 'pnpm-lock.yaml'

      # - name: Install dependencies
      #   run: pnpm install --no-frozen-lockfile

      - name: Mask custom credentials
        if: ${{ github.event.inputs.environment == 'custom' }}
        run: |
          echo "::add-mask::${{ github.event.inputs.custom_netlify_token }}"
          echo "::add-mask::${{ github.event.inputs.custom_netlify_site_id }}"

      - name: Create envs/.env file
        env:
          ENV_VARS_GOV: ${{ secrets.ENV_VARS_GOV }}
          ENV_VARS_PROD: ${{ secrets.ENV_VARS_PROD }}
          ENV_VARS_DEMO2: ${{ secrets.ENV_VARS_DEMO2 }}
        run: |
          if [ "${{ github.event.inputs.environment }}" == "prod" ]; then
            echo "$ENV_VARS_PROD" > envs/.env
          elif [ "${{ github.event.inputs.environment }}" == "gov" ]; then
            echo "$ENV_VARS_GOV" > envs/.env
          elif [ "${{ github.event.inputs.environment }}" == "custom" ]; then
            echo "NETLIFY_SITE_ID=${{ github.event.inputs.custom_netlify_site_id }}" > envs/.env
            echo "NETLIFY_TOKEN=${{ github.event.inputs.custom_netlify_token }}" >> envs/.env
          else
            echo "$ENV_VARS_DEMO2" > envs/.env
          fi

      # - name: Build project
      #   run: |
      #     export NODE_OPTIONS="--max-old-space-size=4096"
      #     npm run build

      - name: Install Netlify CLI
        run: pnpm add -g netlify-cli

      - name: Deploy to Netlify
        env:
          NETLIFY_TOKEN: ${{ 
            github.event.inputs.environment == 'custom' && github.event.inputs.custom_netlify_token ||
            github.event.inputs.environment == 'prod' && secrets.NETLIFY_TOKEN_PROD ||
            github.event.inputs.environment == 'gov' && secrets.NETLIFY_TOKEN_GOV ||
            secrets.NETLIFY_TOKEN_DEMO2
            }}
          NETLIFY_SITE_ID: ${{ 
            github.event.inputs.environment == 'custom' && github.event.inputs.custom_netlify_site_id ||
            github.event.inputs.environment == 'prod' && secrets.NETLIFY_SITE_ID_PROD ||
            github.event.inputs.environment == 'gov' && secrets.NETLIFY_SITE_ID_GOV ||
            secrets.NETLIFY_SITE_ID_DEMO2
            }}
        run: |
          netlify deploy --dir=dist --site $NETLIFY_SITE_ID --auth $NETLIFY_TOKEN
          # Add --prod flag when merging pr

      # - name: Sending Slack Notification
      #   uses: 8398a7/action-slack@v3
      #   with:
      #     status: ${{ job.status }}
      #     fields: repo,commit,author,workflow,job,took
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
