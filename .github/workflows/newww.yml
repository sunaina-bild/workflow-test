name: Test Env Fileee

on:
  workflow_dispatch:
    inputs:
      additional_env_vars:
        description: "Comma-separated extra env vars"
        required: false

jobs:
  prepare-env:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Mask sensitive values
        run: |
         ADDITIONAL_ENV_VARS=$(jq -r '.inputs.additional_env_vars // empty' $GITHUB_EVENT_PATH)
         echo ::add-mask::$ADDITIONAL_ENV_VARS
         echo ADDITIONAL_ENV_VARS=$ADDITIONAL_ENV_VARS >> $GITHUB_ENV
      - name: Prepare env file
        env: 
          CUSTOM_ENV_VARS: ${{ secrets.CUSTOM_ENV_VARS }}
        run: |
          mkdir -p envs
          echo "$CUSTOM_ENV_VARS" | base64 -d > envs/.env
          # echo "${{ secrets.CUSTOM_ENV_VARS }}" | base64 -d > envs/.env

          # Start with env vars from secrets
          # printf "%s\n" "${{ vars.CUSTOM_ENV_VARS }}" > envs/.env
          # # Write secret env vars safely
          # cat << EOF > envs/.env
          # ${{ vars.CUSTOM_ENV_VARS }}
          # EOF
          
          # Append/override with additional input vars
          if [ -n "${{ env.ADDITIONAL_ENV_VARS }}" ]; then
            echo "${{ env.ADDITIONAL_ENV_VARS }}" | tr ',' '\n' | sed '/^$/d' >> envs/.env
          fi
          
          # Deduplicate by keeping the last occurrence of a key
          # awk -F= '!seen[$1]++{line[NR]=$0; order[NR]=$1} {val[$1]=$0} END {for (i=1;i<=NR;i++) if (order[i] in val) {print val[order[i]]; delete val[order[i]]}}' envs/.env > envs/.env.tmp && mv envs/.env.tmp envs/.env
          if [ -f envs/.env ]; then
            # Create a temporary file
            TEMP_FILE=$(mktemp)
            # Read the file in reverse, process unique keys, then reverse back
            tac envs/.env | awk -F= '!seen[$1]++ {print}' | tac > "$TEMP_FILE"
            # Replace the original file with our processed version
            mv "$TEMP_FILE" envs/.env
          fi
      - name: Show final env file
        run: cat envs/.env
        
      - name: Deploy to Netlify (Custom)
        env:
          CUSTOM_VARS: ${{ github.event.inputs.additional_env_vars }}
        run: |
          echo "Deploying to $CUSTOM_VARS"
          
      - name: Deploy to Netlify 
        env:
          CUSTOM_VARS: ${{ env.ADDITIONAL_ENV_VARS }}
        run: |
          echo "Deploying to $CUSTOM_VARS"
      
      
